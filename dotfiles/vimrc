execute pathogen#infect()

set backspace=2         " backspace in insert mode works like normal editor
syntax on               " syntax highlighting
filetype indent on      " activates indenting for files
filetype plugin on      " activates indenting for files
set autoindent          " auto indenting
"set number              " line numbers
colorscheme desert      " colorscheme desert
set nobackup            " get rid of anoying ~file

set mouse=a



if !has("gui_running")
  :source $VIMRUNTIME/menu.vim 
  :set wildmenu                        
  :set cpoptions-=<
  :set wildcharm=<C-Z>
  :map <F4> :emenu <C-Z>
endif

" 'quote' a word
nnoremap qw :silent! normal mpea'<Esc>bi'<Esc>`pl
" " double "quote" a word
nnoremap qd :silent! normal mpea"<Esc>bi"<Esc>`pl
" " remove quotes from a word
nnoremap wq :silent! normal mpeld bhd `ph<CR>

"let g:lisp_rainbow=1
"
"clearly fucking indispensible
set relativenumber
set number

"fix delay after esc O
set timeout timeoutlen=1000 ttimeoutlen=100

set cursorline
"
set history=10000
set expandtab
set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab
set autoindent

:command W w
:command WQ wq
:command Q q

"no adding comment lines when i o or O on a comment
set formatoptions-=or


"let g:slimv_swank_clojure = '! xterm -e lein swank &'


set statusline=     "
set statusline+=%1*%-25.80f%*\ " file name minimum 25, maxiumum 80 (right justified)
set statusline+=%2*
set statusline+=%h "help file flag
set statusline+=%r "read only flag
set statusline+=%m "modified flag
set statusline+=%w "preview flag
set statusline+=%*\ "
"set statusline+=%4*%{fugitive#statusline()}%*\

"remap increment so that it doesnt fuck with tmux
:nnoremap <C-c> <C-a>

":set hlsearch

"let g:slimv_swank_cmd = '! xterm -e sbcl --load /usr/share/common-lisp/source/slime/start-swank.lisp &'
"let g:slimv_swank_cmd = '!osascript -e "tell application \"Terminal\" to do script \"racket /Users/lmohseni/.vim/bundle/swank-racket/server.rkt\""'
"let g:slimv_swank_cmd = '!racket /Users/lmohseni/.vim/bundle/swank-racket/server.rkt &'

"origi  
let g:slimv_swank_cmd = '!osascript -e "tell application \"Terminal\" to do script \"sbcl --load ~/.vim/bundle/slimv/slime/start-swank.lisp\""'

if !has("gui_running")
  :source $VIMRUNTIME/menu.vim 
  :set wildmenu                        
  :set cpoptions-=<
  :set wildcharm=<C-Z>
  :map <F4> :emenu <C-Z>
endif

"repam Q to last macro"
nnoremap Q @@
xnoremap Q @@

set incsearch 
set completeopt-=preview

let g:slimv_repl_split=3

au FileType lisp let b:delimitMate_quotes="* + \" "

"set ruler
"
"set noerrorbells 
"set novisualbell
"set visualbell t_vb
"
"
"let localleader=" "
"let g:tslime_ensure_trailing_newlines = 1
"let g:tslime_normal_mapping = '<localleader>t'
"let g:tslime_visual_mapping = '<localleader>t'
"let g:tslime_vars_mapping = '<localleader>T'

let mapleader = ","
let maplocalleader = ","

set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

let g:slimux_scheme_keybindings=1
let g:slimux_racket_keybindings=1
let g:slimux_racket_xrepl = 1

"map <Leader>c :SlimuxREPLConfigure<CR>

"set omnifunc=syntaxcomplete#Complete
"map <tab><tab> <c-x><c-o>

map <c-s> :runtime bundle/racket-auto-syntax.vim 

let g:syntastic_mode_map = {
        \ "mode": "active",
        \ "active_filetypes": [],
        \ "passive_filetypes": ["racket"] }
